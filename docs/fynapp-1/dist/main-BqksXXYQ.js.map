{"version":3,"file":"main-BqksXXYQ.js","sources":["../node_modules/@fynmesh/kernel/lib/use-middleware.js","../src/main.ts"],"sourcesContent":["/**\n * mark some user code for middleware usage\n *\n * @param meta Information about the middleware\n * @param config Configuration for the middleware\n * @param user User code that uses the middleware\n * @returns A middleware usage object\n */\nexport const useMiddleware = (meta, user) => {\n    user.__middlewareMeta = [].concat(meta);\n    return user;\n};\nexport const noOpMiddlewareUser = {\n    initialize: () => ({ status: \"ready\" }),\n    execute: () => { },\n};\n// example usage of useMiddleware\nexport const main = useMiddleware({\n    info: {\n        name: \"react-context\",\n        version: \"^1.0.0\",\n        provider: \"fynapp-react-lib\",\n    },\n    config: { theme: \"light\" },\n}, noOpMiddlewareUser);\n//# sourceMappingURL=use-middleware.js.map","import type { FynModuleRuntime, ComponentFactoryResult, SelfManagedResult, NoRenderResult, ComponentProps } from \"@fynmesh/kernel\";\nimport { useMiddleware } from \"@fynmesh/kernel\";\n\n/**\n * Standardized middleware user interface\n */\nconst middlewareUser = {\n  /**\n   * Tell middleware what we need - called first to determine readiness\n   */\n  initialize(runtime: FynModuleRuntime) {\n    const basicCounterData = runtime.middlewareContext.get(\"basic-counter\");\n    const config = basicCounterData?.config;\n\n    console.debug(\n      `📋 ${runtime.fynApp.name} initialize called with config:`,\n      config\n    );\n\n    // We're a primary provider\n    return {\n      status: \"ready\",\n      mode: \"provider\",\n    };\n  },\n\n  /**\n   * Main function - called when middleware is ready\n   */\n  async execute(runtime: FynModuleRuntime): Promise<ComponentFactoryResult | SelfManagedResult | NoRenderResult | void> {\n    console.debug(\"🚀 FynApp 1 initializing with middleware support\");\n\n    // Check if shell middleware is managing this execution\n    const shellMiddleware = runtime.middlewareContext.get(\"shell-layout\");\n    const isShellManaged = shellMiddleware?.isShellManaged;\n    \n    console.debug(`🔍 ${runtime.fynApp.name} execute - Shell managed: ${isShellManaged}`);\n\n    // Get the basic counter middleware data to access config\n    const basicCounterData = runtime.middlewareContext.get(\"basic-counter\");\n    const middlewareConfig = basicCounterData?.config || { count: 0 };\n\n    console.debug(\n      \"🔍 fynapp-1: Available middleware APIs:\",\n      Array.from(runtime.middlewareContext.keys())\n    );\n    console.debug(\"🔍 fynapp-1: Middleware config:\", middlewareConfig);\n\n    // Load components from fynapp-x1\n    let components;\n    try {\n      const { preloadComponents } = await import('./components');\n      components = await preloadComponents();\n      console.debug(\"✅ fynapp-1: Loaded components from fynapp-x1\", Object.keys(components));\n    } catch (error) {\n      console.error(\"❌ fynapp-1: Failed to load components:\", error);\n      // Return error result\n      const noRenderResult: NoRenderResult = {\n        type: 'no-render',\n        message: `Failed to load components: ${(error as Error).message}`,\n        metadata: {\n          framework: 'react',\n          version: '19',\n          capabilities: []\n        }\n      };\n      return noRenderResult;\n    }\n\n    // Create a unified component that works in both modes\n    const createAppComponent = async (React: any) => {\n      const App = (await import('./App')).default;\n      \n      const AppWrapper = (props: any) => {\n        return React.createElement(\n          React.Suspense,\n          { fallback: React.createElement('div', { style: { padding: '1rem' } }, 'Loading...') },\n          React.createElement(App, {\n            appName: runtime.fynApp.name,\n            components,\n            middlewareConfig,\n            runtime,\n            ...props\n          })\n        );\n      };\n      \n      return AppWrapper;\n    };\n\n    if (isShellManaged) {\n      // Shell middleware will handle execution - return component factory with full App\n      console.debug(`🎭 ${runtime.fynApp.name} returning component factory for shell`);\n      \n      const result: ComponentFactoryResult = {\n        type: 'component-factory',\n        componentFactory: (React: any) => ({\n          component: async ({ fynAppName, runtime: shellRuntime, ...props }: ComponentProps) => {\n            const AppComponent = await createAppComponent(React);\n            return React.createElement(AppComponent, props);\n          },\n        }),\n        metadata: {\n          framework: 'react',\n          version: '19',\n          capabilities: ['component']\n        }\n      };\n      \n      return result;\n    } else {\n      // Standalone mode - render the same App component using our own React\n      console.debug(`🚀 ${runtime.fynApp.name} executing in standalone mode`);\n      \n      const targetElement = document.getElementById('fynapp-1');\n      if (targetElement) {\n        try {\n          // Dynamic import to avoid build issues\n          const React = (await import('react')).default;\n          const ReactDOM = (await import('react-dom/client')).default;\n          \n          // Use the same unified component\n          const AppComponent = await createAppComponent(React);\n          \n          const root = ReactDOM.createRoot(targetElement);\n          root.render(React.createElement(AppComponent));\n          \n          const result: SelfManagedResult = {\n            type: 'self-managed',\n            target: targetElement,\n            cleanup: () => root.unmount?.(),\n            metadata: {\n              framework: 'react',\n              version: '19',\n              capabilities: ['self-managed']\n            }\n          };\n          \n          return result;\n        } catch (error) {\n          console.error('Failed to render in standalone mode:', error);\n          const noRenderResult: NoRenderResult = {\n            type: 'no-render',\n            message: `Failed to render: ${(error as Error).message}`,\n            metadata: {\n              framework: 'react',\n              version: '19',\n              capabilities: []\n            }\n          };\n          \n          return noRenderResult;\n        }\n      }\n      \n      // No target element found\n      const noRenderResult: NoRenderResult = {\n        type: 'no-render',\n        message: 'Target element #fynapp-1 not found',\n        metadata: {\n          framework: 'react',\n          version: '19',\n          capabilities: []\n        }\n      };\n      \n      return noRenderResult;\n    }\n  },\n};\n\n// Export the middleware usage with standardized interface\nexport const main = useMiddleware(\n  [\n    {\n      info: {\n        name: \"basic-counter\",\n        provider: \"fynapp-react-middleware\",\n        version: \"^1.0.0\",\n      },\n      config: {\n        count: 10,\n      },\n    },\n    {\n      info: {\n        name: \"design-tokens\",\n        provider: \"fynapp-design-tokens\",\n        version: \"^1.0.0\",\n      },\n      config: {\n        theme: \"fynmesh-default\",\n        cssCustomProperties: true,\n        cssVariablePrefix: \"fynmesh\",\n        enableThemeSwitching: true,\n        global: false, // Use scoped themes per fynapp\n      },\n    },\n  ],\n  middlewareUser\n);\n"],"names":["useMiddleware","meta","user","__middlewareMeta","concat","info","name","version","provider","config","theme","initialize","status","execute","exports","count","cssCustomProperties","cssVariablePrefix","enableThemeSwitching","global","runtime","basicCounterData","middlewareContext","get","console","debug","fynApp","mode","shellMiddleware","isShellManaged","middlewareConfig","components","Array","from","keys","preloadComponents","module","import","Object","error","type","message","metadata","framework","capabilities","createAppComponent","async","React","App","default","props","createElement","Suspense","fallback","style","padding","appName","componentFactory","component","fynAppName","shellRuntime","AppComponent","targetElement","document","getElementById","ReactDOM","root","createRoot","render","target","cleanup","unmount"],"mappings":"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","x_google_ignoreList":[0]}