{"version":3,"file":"main-BemYNZXn.js","sources":["../node_modules/@fynmesh/kernel/lib/use-middleware.js","../../src/main.ts"],"sourcesContent":["/**\n * mark some user code for middleware usage\n *\n * @param meta Information about the middleware\n * @param config Configuration for the middleware\n * @param user User code that uses the middleware\n * @returns A middleware usage object\n */\nexport const useMiddleware = (meta, user) => {\n    user.__middlewareMeta = [].concat(meta);\n    return user;\n};\nexport const noOpMiddlewareUser = {\n    initialize: () => ({ status: \"ready\" }),\n    execute: () => { },\n};\n// example usage of useMiddleware\nexport const main = useMiddleware({\n    info: {\n        name: \"react-context\",\n        version: \"^1.0.0\",\n        provider: \"fynapp-react-lib\",\n    },\n    config: { theme: \"light\" },\n}, noOpMiddlewareUser);\n//# sourceMappingURL=use-middleware.js.map","import { useMiddleware, FynModuleRuntime } from \"@fynmesh/kernel\";\nimport React from \"esm-react\";\nimport ReactDOMClient from \"esm-react-dom\";\nimport App from \"./App\";\nimport { preloadComponents, ComponentLibrary } from \"./components\";\n\n/**\n * Standardized middleware user interface\n */\nconst middlewareUser = {\n  /**\n   * Tell middleware what we need - called first to determine readiness\n   */\n  initialize(runtime: FynModuleRuntime) {\n    const basicCounterData = runtime.middlewareContext.get(\"basic-counter\");\n    const config = basicCounterData?.config;\n\n    console.debug(\n      `üìã ${runtime.fynApp.name} initialize called with config:`,\n      config\n    );\n\n    // We're a consumer\n    return {\n      status: \"ready\",\n      mode: \"consumer\",\n    };\n  },\n\n  /**\n   * Main function - called when middleware is ready\n   */\n  async execute(runtime: FynModuleRuntime) {\n    console.debug(\"MiddlewareUser.main called\", {\n      fynApp: runtime.fynApp.name,\n    });\n    console.debug(\n      `Bootstrapping ${runtime.fynApp.name} with React ${React.version}`\n    );\n\n    // Find or create the div element to render into\n    let targetDiv = document.getElementById(\"fynapp-2-react18\");\n    if (!targetDiv) {\n      targetDiv = document.createElement(\"div\");\n      targetDiv.id = \"fynapp-2-react18\";\n      document.body.appendChild(targetDiv);\n    }\n\n    // Load components from fynapp-x1\n    let componentLibrary: ComponentLibrary;\n    try {\n      componentLibrary = await preloadComponents();\n      console.debug(\"Successfully loaded component library from fynapp-x1\");\n    } catch (error) {\n      console.error(\"Failed to load components from fynapp-x1:\", error);\n      targetDiv.innerHTML = `\n        <div style=\"padding: 20px; color: #721c24; background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 4px;\">\n          <h3>Error Loading Components</h3>\n          <p>Failed to load component library from fynapp-x1. Check console for details.</p>\n          <button onclick=\"location.reload()\">Retry</button>\n        </div>\n      `;\n      return;\n    }\n\n    // Get the basic counter middleware data to access config\n    const basicCounterData = runtime.middlewareContext.get(\"basic-counter\");\n    const middlewareConfig = basicCounterData?.config || { count: 0 };\n\n    console.debug(\n      \"üîç fynapp-2-react18: Available middleware APIs:\",\n      Array.from(runtime.middlewareContext.keys())\n    );\n    console.debug(\"üîç fynapp-2-react18: Middleware config:\", middlewareConfig);\n\n    // Render the React component with middleware config\n    const root = ReactDOMClient.createRoot ? ReactDOMClient.createRoot(targetDiv) : ReactDOMClient.default.createRoot(targetDiv);\n\n    root.render(\n      React.createElement(App, {\n        appName: runtime.fynApp.name,\n        components: componentLibrary,\n        middlewareConfig,\n        runtime, // Pass runtime for middleware context access\n      })\n    );\n  },\n};\n\n// Export the middleware usage with standardized interface\n// This app is a consumer - it consumes the basic counter config from the provider\nexport const main = useMiddleware(\n  {\n    info: {\n      name: \"basic-counter\",\n      provider: \"fynapp-react-middleware\",\n      version: \"^1.0.0\",\n    },\n    config: \"consume-only\", // Consumer - uses config from provider\n  },\n  middlewareUser\n);\n"],"names":["useMiddleware","meta","user","__middlewareMeta","concat","info","name","version","provider","config","theme","initialize","status","execute","exports","runtime","basicCounterData","middlewareContext","get","console","debug","fynApp","mode","React","componentLibrary","targetDiv","document","getElementById","createElement","id","body","appendChild","preloadComponents","error","innerHTML","middlewareConfig","count","Array","from","keys","ReactDOMClient","createRoot","default","render","App","appName","components"],"mappings":"+YAQO,MAAMA,EAAgB,CAACC,EAAMC,KAChCA,EAAKC,iBAAmB,GAAGC,OAAOH,GAC3BC,GAOSF,EAAc,CAC9BK,KAAM,CACFC,KAAM,gBACNC,QAAS,SACTC,SAAU,oBAEdC,OAAQ,CAAEC,MAAO,UAXa,CAC9BC,WAAY,KAAO,CAAEC,OAAQ,UAC7BC,QAAS,SC6EOC,EAAA,OAAAd,EAClB,CACEK,KAAM,CACJC,KAAM,gBACNE,SAAU,0BACVD,QAAS,UAEXE,OAAQ,gBAzFW,CAIrB,UAAAE,CAAWI,GACT,MAAMC,EAAmBD,EAAQE,kBAAkBC,IAAI,iBACjDT,EAASO,GAAkBP,OAQjC,OANAU,QAAQC,MACN,MAAML,EAAQM,OAAOf,sCACrBG,GAIK,CACLG,OAAQ,QACRU,KAAM,WAET,EAKD,aAAMT,CAAQE,GACZI,QAAQC,MAAM,6BAA8B,CAC1CC,OAAQN,EAAQM,OAAOf,OAEzBa,QAAQC,MACN,iBAAiBL,EAAQM,OAAOf,mBAAmBiB,EAAMhB,WAI3D,IAQIiB,EARAC,EAAYC,SAASC,eAAe,oBACnCF,IACHA,EAAYC,SAASE,cAAc,OACnCH,EAAUI,GAAK,mBACfH,SAASI,KAAKC,YAAYN,IAK5B,IACED,QAAyBQ,IACzBb,QAAQC,MAAM,wDACd,MAAOa,GASP,OARAd,QAAQc,MAAM,4CAA6CA,QAC3DR,EAAUS,UAAY,qWAWxB,MAAMlB,EAAmBD,EAAQE,kBAAkBC,IAAI,iBACjDiB,EAAmBnB,GAAkBP,QAAU,CAAE2B,MAAO,GAE9DjB,QAAQC,MACN,kDACAiB,MAAMC,KAAKvB,EAAQE,kBAAkBsB,SAEvCpB,QAAQC,MAAM,0CAA2Ce,IAG5CK,EAAeC,WAAaD,EAAeC,WAAWhB,GAAae,EAAeE,QAAQD,WAAWhB,IAE7GkB,OACHpB,EAAMK,cAAcgB,EAAK,CACvBC,QAAS9B,EAAQM,OAAOf,KACxBwC,WAAYtB,EACZW,mBACApB,YAGL","x_google_ignoreList":[0]}