{"version":3,"file":"main-rUgfumEV.js","sources":["../node_modules/@fynmesh/kernel/lib/use-middleware.js","../../src/App.tsx","../../src/main.ts","../../src/components.ts"],"sourcesContent":["/**\n * mark some user code for middleware usage\n *\n * @param meta Information about the middleware\n * @param config Configuration for the middleware\n * @param user User code that uses the middleware\n * @returns A middleware usage object\n */\nexport const useMiddleware = (meta, user) => {\n    user.__middlewareMeta = [].concat(meta);\n    return user;\n};\nexport const noOpMiddlewareUser = {\n    initialize: () => { },\n    execute: () => { },\n};\n// example usage of useMiddleware\nexport const main = useMiddleware({\n    info: {\n        name: \"react-context\",\n        version: \"^1.0.0\",\n        provider: \"fynapp-react-lib\",\n    },\n    config: { theme: \"light\" },\n}, noOpMiddlewareUser);\n//# sourceMappingURL=use-middleware.js.map","import React, { useState, useEffect } from \"react\";\nimport type { ComponentLibrary } from \"./components\";\nimport type { FynModuleRuntime } from \"@fynmesh/kernel\";\n\ninterface AppProps {\n  appName: string;\n  components: ComponentLibrary;\n  middlewareConfig?: any;\n  runtime?: FynModuleRuntime;\n}\n\nconst App: React.FC<AppProps> = ({\n  appName,\n  components,\n  middlewareConfig,\n  runtime,\n}: AppProps) => {\n  const [showEffect, setShowEffect] = React.useState<boolean>(false);\n  const [clickCount, setClickCount] = React.useState<number>(0);\n  const [showModal, setShowModal] = React.useState<boolean>(false);\n  const [inputValue, setInputValue] = React.useState<string>(\"\");\n  const [count, setCount] = React.useState<number>(0);\n\n  // Basic counter state for middleware integration\n  const [counter, setCounter] = useState({\n    count: middlewareConfig?.count || 0,\n  });\n\n  // Function to get the shared data object from middleware context\n  const getSharedDataObject = () => {\n    if (runtime?.middlewareContext) {\n      const basicCounterData = runtime.middlewareContext.get(\"basic-counter\");\n      return basicCounterData; // Return the actual object, not a copy\n    }\n    return null;\n  };\n\n  // Function to read current count from the shared data object\n  const readCountFromSharedData = () => {\n    const sharedData = getSharedDataObject();\n    return sharedData?.config?.count || middlewareConfig?.count || 0;\n  };\n\n  // Set up event listener for counter changes from other apps\n  useEffect(() => {\n    const syncWithSharedData = () => {\n      const sharedCount = readCountFromSharedData();\n      setCounter({ count: sharedCount });\n    };\n\n    // Initial sync\n    syncWithSharedData();\n\n    // Set up event listener for changes from other apps\n    const handleCounterChange = (event: CustomEvent) => {\n      const { count, source } = event.detail;\n      if (source !== runtime?.fynApp?.name) {\n        // Only update if the change came from a different app\n        setCounter({ count });\n        console.debug(\n          `🔄 fynapp-2-react18: Received counter update from ${source}:`,\n          count\n        );\n      }\n    };\n\n    const sharedData = getSharedDataObject();\n    if (sharedData?.eventTarget) {\n      sharedData.eventTarget.addEventListener(\n        \"counterChanged\",\n        handleCounterChange\n      );\n\n      return () => {\n        sharedData.eventTarget.removeEventListener(\n          \"counterChanged\",\n          handleCounterChange\n        );\n      };\n    }\n  }, [runtime, middlewareConfig]);\n\n  // Destructure the components\n  const { Button, Card, Input, Modal, Alert, Badge, Spinner } = components;\n\n  const handleButtonClick = () => {\n    setShowEffect(true);\n    setClickCount((prev: number) => prev + 1);\n    setCount(count + 1); // Update the counter immediately for simplicity\n    setTimeout(() => setShowEffect(false), 1000);\n  };\n\n  // Basic counter handlers\n  const handleIncrement = () => {\n    const sharedData = getSharedDataObject();\n    if (sharedData?.increment) {\n      const newCount = sharedData.increment(runtime?.fynApp?.name);\n      // Update local state for immediate UI response\n      setCounter({ count: newCount });\n      console.debug(\"✅ fynapp-2-react18: Counter incremented to:\", newCount);\n    }\n  };\n\n  const handleReset = () => {\n    const sharedData = getSharedDataObject();\n    if (sharedData?.reset) {\n      const newCount = sharedData.reset(runtime?.fynApp?.name);\n      // Update local state for immediate UI response\n      setCounter({ count: newCount });\n      console.debug(\"✅ fynapp-2-react18: Counter reset to:\", newCount);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"768px\", margin: \"0 auto\" }}>\n      <h2>\n        {appName}: React {React.version} using Components from fynapp-x1 v1\n      </h2>\n\n      {/* Basic Counter Section - NEW */}\n      {runtime && middlewareConfig && (\n        <Card\n          title=\"🔗 Basic Counter (Middleware Consumer)\"\n          style={{ marginBottom: \"16px\" }}\n        >\n          <div style={{ padding: \"15px\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                gap: \"15px\",\n              }}\n            >\n              <div\n                style={{\n                  fontSize: \"28px\",\n                  fontWeight: \"bold\",\n                  color: \"#007bff\",\n                  minWidth: \"60px\",\n                  textAlign: \"center\",\n                }}\n              >\n                {counter.count}\n              </div>\n              <Button variant=\"primary\" onClick={handleIncrement}>\n                Increment\n              </Button>\n              <Button variant=\"outline\" onClick={handleReset}>\n                Reset\n              </Button>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      <Alert variant=\"info\" style={{ marginBottom: \"16px\" }}>\n        Component counter: {count}\n      </Alert>\n\n      <Card\n        title=\"Example Card from fynapp-x1 v1\"\n        footer={\n          <div\n            style={{ display: \"flex\", justifyContent: \"flex-end\", gap: \"12px\" }}\n          >\n            <Button variant=\"outline\" onClick={() => setShowModal(true)}>\n              Open Modal\n            </Button>\n            <Button variant=\"primary\" onClick={handleButtonClick}>\n              Click Me ({clickCount})\n            </Button>\n          </div>\n        }\n      >\n        <p>This is a card component from fynapp-x1 version 1.0.0!</p>\n        <p>Try out different components below:</p>\n\n        <div style={{ marginBottom: \"20px\" }}>\n          <h4>Badges:</h4>\n          <div style={{ display: \"flex\", gap: \"12px\", marginTop: \"12px\" }}>\n            <Badge variant=\"default\">Default</Badge>\n            <Badge variant=\"primary\">Primary</Badge>\n            <Badge variant=\"success\">Success</Badge>\n            <Badge variant=\"warning\">Warning</Badge>\n            <Badge variant=\"danger\">Danger</Badge>\n          </div>\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <h4>Spinner examples:</h4>\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"20px\",\n              alignItems: \"center\",\n              marginTop: \"12px\",\n            }}\n          >\n            <Spinner size=\"small\" color=\"primary\" />\n            <Spinner size=\"medium\" color=\"gray\" />\n            <Spinner size=\"large\" color=\"primary\" />\n          </div>\n        </div>\n      </Card>\n\n      {showEffect && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            pointerEvents: \"none\",\n            zIndex: 1000,\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"150%\",\n              height: \"150%\",\n              borderRadius: \"50%\",\n              background:\n                \"radial-gradient(circle, rgba(99, 102, 241, 0.3) 0%, rgba(99, 102, 241, 0.1) 50%, transparent 100%)\",\n              animation: \"pulse 1s ease-in-out\",\n            }}\n          />\n          <div\n            style={{\n              fontSize: \"3rem\",\n              fontWeight: \"bold\",\n              color: \"#6366f1\",\n              textShadow: \"2px 2px 4px rgba(0,0,0,0.3)\",\n              animation: \"bounce 1s ease-in-out\",\n            }}\n          >\n            +1 Click!\n          </div>\n          <style>{`\n            @keyframes pulse {\n              0%, 100% { opacity: 1; transform: scale(1); }\n              50% { opacity: 0.7; transform: scale(1.05); }\n            }\n            @keyframes bounce {\n              0%, 20%, 53%, 80%, 100% { transform: translateY(0); }\n              40%, 43% { transform: translateY(-15px); }\n              70% { transform: translateY(-5px); }\n              90% { transform: translateY(-3px); }\n            }\n          `}</style>\n        </div>\n      )}\n\n      {showModal && (\n        <Modal\n          isOpen={showModal}\n          onClose={() => setShowModal(false)}\n          title=\"Example Modal (v1 components)\"\n          footer={\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                gap: \"12px\",\n                padding: \"16px 20px\",\n              }}\n            >\n              <Button variant=\"outline\" onClick={() => setShowModal(false)}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" onClick={() => setShowModal(false)}>\n                Confirm\n              </Button>\n            </div>\n          }\n        >\n          <div style={{ padding: \"20px\" }}>\n            <p style={{ marginBottom: \"16px\" }}>\n              This is a modal component from fynapp-x1 version 1.0.0!\n            </p>\n            <Input\n              label=\"Example Input\"\n              value={inputValue}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setInputValue(e.target.value)\n              }\n              placeholder=\"Type something...\"\n              helperText=\"This is a helper text\"\n            />\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { useMiddleware, FynModuleRuntime } from \"@fynmesh/kernel\";\nimport React from \"react\";\nimport { version as ReactDomVersion } from \"react-dom\";\nimport ReactDomClient from \"react-dom/client\";\nimport App from \"./App\";\nimport { preloadComponents, ComponentLibrary } from \"./components\";\n\n/**\n * Standardized middleware user interface\n */\nconst middlewareUser = {\n  /**\n   * Tell middleware what we need - called first to determine readiness\n   */\n  initialize(runtime: FynModuleRuntime) {\n    const basicCounterData = runtime.middlewareContext.get(\"basic-counter\");\n    const config = basicCounterData?.config;\n\n    console.debug(\n      `📋 ${runtime.fynApp.name} initialize called with config:`,\n      config\n    );\n\n    // We're a consumer\n    return {\n      status: \"ready\",\n      mode: \"consumer\",\n    };\n  },\n\n  /**\n   * Main function - called when middleware is ready\n   */\n  async execute(runtime: FynModuleRuntime) {\n    console.debug(\"MiddlewareUser.main called\", {\n      fynApp: runtime.fynApp.name,\n    });\n    console.debug(\n      `Bootstrapping ${runtime.fynApp.name} with React ${React.version}`\n    );\n\n    // Find or create the div element to render into\n    let targetDiv = document.getElementById(\"fynapp-2-react18\");\n    if (!targetDiv) {\n      targetDiv = document.createElement(\"div\");\n      targetDiv.id = \"fynapp-2-react18\";\n      document.body.appendChild(targetDiv);\n    }\n\n    // Load components from fynapp-x1\n    let componentLibrary: ComponentLibrary;\n    try {\n      componentLibrary = await preloadComponents();\n      console.debug(\"Successfully loaded component library from fynapp-x1\");\n    } catch (error) {\n      console.error(\"Failed to load components from fynapp-x1:\", error);\n      targetDiv.innerHTML = `\n        <div style=\"padding: 20px; color: #721c24; background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 4px;\">\n          <h3>Error Loading Components</h3>\n          <p>Failed to load component library from fynapp-x1. Check console for details.</p>\n          <button onclick=\"location.reload()\">Retry</button>\n        </div>\n      `;\n      return;\n    }\n\n    // Get the basic counter middleware data to access config\n    const basicCounterData = runtime.middlewareContext.get(\"basic-counter\");\n    const middlewareConfig = basicCounterData?.config || { count: 0 };\n\n    console.debug(\n      \"🔍 fynapp-2-react18: Available middleware APIs:\",\n      Array.from(runtime.middlewareContext.keys())\n    );\n    console.debug(\"🔍 fynapp-2-react18: Middleware config:\", middlewareConfig);\n\n    // Render the React component with middleware config\n    const root = ReactDomClient.createRoot(targetDiv);\n\n    root.render(\n      React.createElement(App, {\n        appName: runtime.fynApp.name,\n        components: componentLibrary,\n        middlewareConfig,\n        runtime, // Pass runtime for middleware context access\n      })\n    );\n  },\n};\n\n// Export the middleware usage with standardized interface\n// This app is a consumer - it consumes the basic counter config from the provider\nexport const main = useMiddleware(\n  {\n    info: {\n      name: \"basic-counter\",\n      provider: \"fynapp-react-middleware\",\n      version: \"^1.0.0\",\n    },\n    config: \"consume-only\", // Consumer - uses config from provider\n  },\n  middlewareUser\n);\n","/**\n* This file handles dynamic imports of the reusable components from fynapp-x1\n* These imports are managed by the fynmesh kernel's module federation system\n*/\nimport React from 'react';\n\n// Type definition for the component library\nexport type ComponentLibrary = {\n    Button: React.ComponentType<any>;\n    Card: React.ComponentType<any>;\n    Input: React.ComponentType<any>;\n    Modal: React.ComponentType<any>;\n    Alert: React.ComponentType<any>;\n    Badge: React.ComponentType<any>;\n    Spinner: React.ComponentType<any>;\n};\n\n/**\n * Preloads all components from fynapp-x1 and returns them as a library\n * This should be called before rendering the App component\n */\nexport const preloadComponents = async (): Promise<ComponentLibrary> => {\n    try {\n        // dynamic import exposed modules from module federation remote container\n        // @ts-ignore - TS can't understand module federation remote containers\n        const components = await import('fynapp-x1/main', { with: { type: \"mf-expose\", requireVersion: \"^1.0.0\" } }) as ComponentLibrary;\n\n        // Return the components library\n        return components;\n    } catch (error) {\n        console.error('Failed to load components from fynapp-x1:', error);\n        throw error;\n    }\n};\n\n// Get a specific component by name\nexport const getComponent = async (name: keyof ComponentLibrary) => {\n    const components = await preloadComponents();\n    return components[name];\n};\n\n// Export a lazy loading wrapper for each component\nexport const createLazyComponent = (componentName: keyof ComponentLibrary) => {\n    return React.lazy(() =>\n        preloadComponents()\n            .then(module => ({\n                default: module[componentName]\n            }))\n    );\n};\n"],"names":["useMiddleware","meta","user","__middlewareMeta","concat","info","name","version","provider","config","theme","initialize","execute","App","appName","components","middlewareConfig","runtime","showEffect","setShowEffect","React","useState","clickCount","setClickCount","showModal","setShowModal","inputValue","setInputValue","count","setCount","counter","setCounter","getSharedDataObject","middlewareContext","get","useEffect","sharedCount","sharedData","readCountFromSharedData","syncWithSharedData","handleCounterChange","event","source","detail","fynApp","console","debug","eventTarget","addEventListener","removeEventListener","Button","Card","Input","Modal","Alert","Badge","Spinner","createElement","style","padding","maxWidth","margin","title","marginBottom","display","alignItems","justifyContent","gap","fontSize","fontWeight","color","minWidth","textAlign","variant","onClick","increment","newCount","reset","footer","prev","setTimeout","marginTop","size","position","top","left","right","bottom","pointerEvents","zIndex","width","height","borderRadius","background","animation","textShadow","isOpen","onClose","label","value","onChange","e","target","placeholder","helperText","exports","basicCounterData","status","mode","componentLibrary","targetDiv","document","getElementById","id","body","appendChild","async","Federation","_importExpose","error","preloadComponents","innerHTML","Array","from","keys","ReactDomClient","createRoot","render"],"mappings":"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","x_google_ignoreList":[0]}