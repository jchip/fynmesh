!function(){"use strict";class e extends EventTarget{constructor(){super()}on(e,n,i){this.addEventListener(e,n,i)}once(e,n,i){const t=i=>(this.removeEventListener(e,t),function(e){return"function"==typeof e}(n)?n(i):n.handleEvent(i));this.addEventListener(e,t,i)}}const n={regKey:""};class i{constructor(){this.version="1.0.0",this.shareScopeName="fynmesh",this.deferInvoke=[],this.middlewareReady=new Map,this.events=new e,this.runTime={appsLoaded:{},middlewares:{}},this.events.on("MIDDLEWARE_READY",e=>{this.handleMiddlewareReady(e)})}async emitAsync(e){return this.events.dispatchEvent(e)}async handleMiddlewareReady(e){const{name:n,status:i,cc:t,share:r}=e.detail,o=r||{};this.middlewareReady.set(t.reg.fullKey,o);const a=[];for(let e=0;e<this.deferInvoke.length;e++){const{callContexts:n}=this.deferInvoke[e];let i=0;for(const e of n)e.reg.fullKey===t.reg.fullKey&&(e.runtime.share=o,e.status="ready"),"ready"===e.status&&i++;i===n.length&&(a.push(this.deferInvoke[e]),this.deferInvoke[e]=null)}if(a.length>0){this.deferInvoke=this.deferInvoke.filter(Boolean);for(const e of a)await this.callMiddlewares(e.callContexts)}console.debug(`‚úÖ Middleware ${n} status: ${i} regKey: ${t.reg.regKey} now: ${Date.now()}`)}registerMiddleware(e){const{regKey:n,hostFynApp:i}=e;console.log(`üîß Registering middleware: ${n}, autoApplyScope:`,e.middleware.autoApplyScope);const t=this.runTime.middlewares[n]||Object.create(null);if(t[i.version])return void console.debug(`‚ö†Ô∏è Middleware already registered: ${n}@${i.version} - skipping duplicate registration`);t[i.version]=e,t.default||(t.default=e),this.runTime.middlewares[n]=t;const r=e.middleware.autoApplyScope||[];r.length>0?(this.runTime.autoApplyMiddlewares||(this.runTime.autoApplyMiddlewares={fynapp:[],middleware:[]}),(r.includes("all")||r.includes("fynapp"))&&this.runTime.autoApplyMiddlewares.fynapp.push(e),(r.includes("all")||r.includes("middleware"))&&this.runTime.autoApplyMiddlewares.middleware.push(e),console.debug(`üéØ Registered auto-apply middleware for [${r.join(", ")}]: ${n}@${i.version}`)):console.debug(`‚úÖ Registered explicit-use middleware: ${n}@${i.version}`)}getMiddleware(e,i){if(i){const n=`${i}::${e}`,t=this.runTime.middlewares[n];if(t){const e=t.default;if(e)return e}}return n}initRunTime(e){return this.runTime={...e},this.runTime}cleanContainerName(e){return e.replace(/[\@\-./]/g,"_").replace(/^_*/,"")}async loadExposeModule(e,n,i){const t=e.entry.container;if(t?.$E[n]){const t=(await e.entry.get(n))(),r=[];if(i){for(const[i,o]of Object.entries(t))if(i.startsWith("__middleware__")){const t=o,a=t.name,s={regKey:`${e.name}::${a}`,fullKey:`${e.name}@${e.version}::${a}`,hostFynApp:e,exposeName:n,exportName:i,middleware:t};this.registerMiddleware(s),r.push(i)}return console.debug(`‚úÖ Expose module '${n}' loaded for`,e.name,e.version,r.length>0?"middlewares registered:":"",r.join(", ")),e.exposes[n]=t,t.__name&&(e.exposes[t.__name]=t),t}console.debug(`‚ùå No expose module '${n}' found for`,e.name,e.version)}}async loadFynAppBasics(e){const n=e.container;console.debug("üöÄ Initializing FynApp entry",n.name,n.version),e.init(),console.debug("üöÄ Loading FynApp basics for",n.name,n.version);const i={name:n.name,version:n.version||"1.0.0",packageName:n.name,entry:e,middlewareContext:new Map,exposes:{}};if(n&&n.$E["./config"]){const n=await e.get("./config");i.config=n()}return e.setup&&(console.debug("üöÄ Invoking entry.setup for",i.name,i.version),await e.setup()),await this.loadExposeModule(i,"./main",!0),console.debug("‚úÖ FynApp basics loaded for",i.name,i.version),i}createFynModuleRuntime(e){return{fynApp:e,middlewareContext:new Map}}async invokeFynModule(e,n){const i=this.createFynModuleRuntime(n),t=this.findExecutionOverride(n,e);if(t){console.debug(`üé≠ Middleware ${t.middleware.name} is overriding execution for ${n.name}`);const r={meta:{info:{name:t.middleware.name,provider:t.hostFynApp.name,version:t.hostFynApp.version},config:{}},fynMod:e,fynApp:n,reg:t,runtime:i,kernel:this,status:"ready"};if(t.middleware.overrideInitialize&&e.initialize){console.debug(`üé≠ Middleware overriding initialize for ${n.name}`);const e=await t.middleware.overrideInitialize(r);console.debug("üé≠ Initialize result:",e)}return void(t.middleware.overrideExecute&&"function"==typeof e.execute&&(console.debug(`üé≠ Middleware overriding execute for ${n.name}`),await t.middleware.overrideExecute(r)))}if(e.initialize){console.debug("üöÄ Invoking module.initialize for",n.name,n.version);const t=await e.initialize(i);console.debug("üöÄ Initialize result:",t)}if(e.execute){console.debug("üöÄ Invoking module.execute for",n.name,n.version);const t=await e.execute(i);t&&console.debug("üì¶ FynModule returned typed result:",t.type,t.metadata)}}findExecutionOverride(e,n){const i=this.runTime.autoApplyMiddlewares;if(!i)return null;const t=Object.keys(e.exposes).some(e=>e.startsWith("./middleware"))?i.middleware:i.fynapp;for(const i of t)if(i.middleware.canOverrideExecution?.(e,n))return i;return null}checkSingleMiddlewareReady(e){return!!this.middlewareReady.has(e.reg.fullKey)&&(e.runtime.share=this.middlewareReady.get(e.reg.fullKey),e.status="ready",!0)}checkMiddlewareReady(e){let n="ready";for(const i of e)this.checkSingleMiddlewareReady(i)||(n="defer");return n}checkDeferCalls(e,n){return"defer"===e?"ready"===this.checkMiddlewareReady(n)?"retry":(this.deferInvoke.push({callContexts:n}),"defer"):"ready"}async callMiddlewares(e,n=0){if(n>1)throw console.error("üö® Middleware setup failed after 2 tries",e),new Error("Middleware setup failed after 2 tries");this.checkMiddlewareReady(e);let i="ready";for(const n of e){const{fynApp:e,reg:t}=n,r=t.middleware;if(this.checkSingleMiddlewareReady(n),r.setup){console.debug("üöÄ Invoking middleware",t.regKey,"setup for",e.name,e.version);const o=await r.setup(n);"defer"===o?.status&&(i="defer")}}if(i=this.checkDeferCalls(i,e),"defer"===i)return i;if("retry"===i)return await this.callMiddlewares(e,n+1);const t=e[0].fynMod,r=e[0].fynApp,o=e[0].runtime;if(t.initialize){console.debug("üöÄ Invoking user.initialize for",r.name,r.version);const a=await t.initialize(o);if(i=this.checkDeferCalls(a?.status,e),"defer"===i)return i;if("retry"===i)return await this.callMiddlewares(e,n+1)}for(const n of e){const{reg:e}=n,i=e.middleware;i.apply&&(console.debug("üöÄ Invoking middleware",e.regKey,"apply for",r.name,r.version),await i.apply(n))}return t.execute&&(console.debug("üöÄ Invoking user.execute for",r.name,r.version),await t.execute(o)),"ready"}async useMiddlewareOnFynModule(e,n){if(!e.__middlewareMeta)return"";const i=this.createFynModuleRuntime(n),t=e.__middlewareMeta.map(t=>{const r=t.info,o=this.getMiddleware(r.name,r.provider);return""===o.regKey?(console.debug("‚ùå No middleware found for",r.name,r.provider),{}):{meta:t,fynMod:e,fynApp:n,reg:o,kernel:this,runtime:i,status:""}}).filter(e=>void 0!==e.meta);return this.callMiddlewares(t)}async applyAutoScopeMiddlewares(e,n){console.log(`üéØ Auto-apply check for ${e.name}: autoApplyMiddlewares exists?`,!!this.runTime.autoApplyMiddlewares);const i=this.runTime.autoApplyMiddlewares;if(!i)return void console.log(`‚è≠Ô∏è No auto-apply middlewares registered yet for ${e.name}`);const t=Object.keys(e.exposes).some(e=>e.startsWith("./middleware"))?i.middleware:i.fynapp;for(const i of t){if(i.middleware.shouldApply)try{if(!i.middleware.shouldApply(e)){console.debug(`‚è≠Ô∏è Skipping middleware ${i.regKey} for ${e.name} (filtered out)`);continue}}catch(e){console.error(`‚ùå Error in shouldApply for ${i.regKey}:`,e);continue}console.debug(`üîÑ Auto-applying ${i.middleware.autoApplyScope} middleware ${i.regKey} to ${e.name}`);const t={meta:{info:{name:i.middleware.name,provider:i.hostFynApp.name,version:i.hostFynApp.version},config:{}},fynMod:n||{async execute(){}},fynApp:e,reg:i,runtime:this.createFynModuleRuntime(e),kernel:this,status:"ready"};try{i.middleware.setup&&await i.middleware.setup(t),i.middleware.apply&&await i.middleware.apply(t)}catch(n){console.error(`‚ùå Failed to apply auto-scope middleware ${i.regKey} to ${e.name}:`,n)}}}async bootstrapFynApp(e){for(const n of Object.keys(e.entry.container.$E))n.startsWith("./middleware")&&await this.loadExposeModule(e,n,!0);const n=e.exposes["./main"]?.main;n&&(console.debug("üöÄ Bootstrapping FynApp",e.name,e.version),await this.applyAutoScopeMiddlewares(e,n),"function"==typeof n?await n(this.createFynModuleRuntime(e)):n.__middlewareMeta?await this.useMiddlewareOnFynModule(n,e):await this.invokeFynModule(n,e)),console.debug("‚úÖ FynApp bootstrapped",e.name,e.version)}buildFynAppUrl(e,n="fynapp-entry.js"){return function(e,n){const i=n.startsWith("/")||e.endsWith("/")?"":"/";return`${e}${i}${n}`}(e,n)}}class t extends i{async loadFynApp(e,n){const i=globalThis.Federation;if(!i)throw new Error("Federation.js is not loaded.");try{n=n||e;const t=this.buildFynAppUrl(e);console.debug("üöÄ Loading FynApp from",t);const r=await i.import(t);console.debug("üöÄ FynApp entry loaded",r);const o=await this.loadFynAppBasics(r);await this.bootstrapFynApp(o)}catch(n){throw console.error(`Failed to load remote fynapp from ${e}:`,n),n}}}globalThis.fynMeshKernel=function(){const e=new t;return e.initRunTime({appsLoaded:{},middlewares:{}}),e}()}();
//# sourceMappingURL=fynmesh-browser-kernel.min.js.map
